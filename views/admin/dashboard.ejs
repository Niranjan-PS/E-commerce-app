<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Admin Dashboard</title>
  
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <!-- Admin CSS -->
  <link rel="stylesheet" href="/css/admin.css">
  
  <style>
    :root {
      --primary-color: #4f46e5;
      --secondary-color: #6366f1;
      --success-color: #10b981;
      --warning-color: #f59e0b;
      --danger-color: #ef4444;
      --info-color: #3b82f6;
      --light-bg: #f8fafc;
      --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      --card-shadow-hover: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
      --border-radius: 12px;
      --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    * {
      box-sizing: border-box;
    }

    body {
      background-color: var(--light-bg);
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      line-height: 1.6;
    }

    .main-content {
      padding: 1.5rem;
      min-height: 100vh;
    }

    /* Header Section */
    .dashboard-header {
      background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
      color: white;
      padding: 2rem;
      border-radius: var(--border-radius);
      margin-bottom: 2rem;
      box-shadow: var(--card-shadow);
    }

    .dashboard-title {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
    }

    .dashboard-subtitle {
      opacity: 0.9;
      font-size: 1.1rem;
    }

    /* Search Bar */
    .search-container {
      position: relative;
      max-width: 400px;
      margin-left: auto;
    }

    .search-input {
      width: 100%;
      padding: 0.75rem 1rem 0.75rem 2.5rem;
      border: 2px solid #e5e7eb;
      border-radius: var(--border-radius);
      font-size: 0.95rem;
      transition: var(--transition);
      background: white;
    }

    .search-input:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
    }

    .search-icon {
      position: absolute;
      left: 0.75rem;
      top: 50%;
      transform: translateY(-50%);
      color: #6b7280;
    }

    /* Stats Cards */
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1.5rem;
      margin-bottom: 2rem;
    }

    .stat-card {
      background: white;
      padding: 1.5rem;
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);
      transition: var(--transition);
      border: 1px solid #f1f5f9;
      position: relative;
      overflow: hidden;
    }

    .stat-card:hover {
      transform: translateY(-2px);
      box-shadow: var(--card-shadow-hover);
    }

    .stat-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
    }

    .stat-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1rem;
    }

    .stat-title {
      font-size: 0.875rem;
      font-weight: 600;
      color: #6b7280;
      text-transform: uppercase;
      letter-spacing: 0.05em;
    }

    .stat-icon {
      width: 2.5rem;
      height: 2.5rem;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.25rem;
    }

    .stat-value {
      font-size: 2rem;
      font-weight: 700;
      color: #1f2937;
      margin-bottom: 0.25rem;
    }

    .stat-change {
      font-size: 0.875rem;
      font-weight: 500;
    }

    .stat-change.positive {
      color: var(--success-color);
    }

    .stat-change.negative {
      color: var(--danger-color);
    }

    /* Quick Access Cards */
    .quick-access-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1rem;
      margin-bottom: 2rem;
    }

    .quick-access-card {
      background: white;
      padding: 1.5rem;
      border-radius: var(--border-radius);
      text-decoration: none;
      color: inherit;
      transition: var(--transition);
      box-shadow: var(--card-shadow);
      border: 1px solid #f1f5f9;
      text-align: center;
    }

    .quick-access-card:hover {
      transform: translateY(-4px);
      box-shadow: var(--card-shadow-hover);
      text-decoration: none;
      color: inherit;
    }

    .quick-access-icon {
      width: 3rem;
      height: 3rem;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 1rem;
      font-size: 1.5rem;
      color: white;
    }

    .quick-access-title {
      font-weight: 600;
      margin-bottom: 0.5rem;
      color: #1f2937;
    }

    .quick-access-desc {
      font-size: 0.875rem;
      color: #6b7280;
    }

    /* Chart Containers */
    .chart-card {
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);
      border: 1px solid #f1f5f9;
      overflow: hidden;
      transition: var(--transition);
    }

    .chart-card:hover {
      box-shadow: var(--card-shadow-hover);
    }

    .chart-header {
      padding: 1.5rem;
      border-bottom: 1px solid #f1f5f9;
      background: #fafbfc;
    }

    .chart-title {
      font-size: 1.25rem;
      font-weight: 600;
      color: #1f2937;
      margin-bottom: 0.25rem;
    }

    .chart-subtitle {
      font-size: 0.875rem;
      color: #6b7280;
    }

    .chart-controls {
      display: flex;
      gap: 0.75rem;
      align-items: center;
      flex-wrap: wrap;
    }

    .chart-select {
      padding: 0.5rem 0.75rem;
      border: 1px solid #d1d5db;
      border-radius: 0.5rem;
      background: white;
      font-size: 0.875rem;
      cursor: pointer;
      transition: var(--transition);
    }

    .chart-select:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
    }

    .refresh-btn {
      padding: 0.5rem 0.75rem;
      background: var(--primary-color);
      color: white;
      border: none;
      border-radius: 0.5rem;
      cursor: pointer;
      transition: var(--transition);
      font-size: 0.875rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .refresh-btn:hover {
      background: var(--secondary-color);
      transform: translateY(-1px);
    }

    .refresh-btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none;
    }

    /* Chart Body - Fixed Layout */
    .chart-body {
      padding: 1.5rem;
      position: relative;
      height: 350px;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
    }

    .chart-canvas {
      width: 100% !important;
      height: 300px !important;
      max-width: 100%;
      max-height: 300px;
      display: block;
    }

    /* Sales Analytics Chart - Special Fixed Container */
    .sales-chart-body {
      padding: 1.5rem;
      position: relative;
      height: 400px;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
      background: #fafbfc;
    }

    .sales-chart-canvas {
      width: 100% !important;
      height: 350px !important;
      max-width: 100%;
      max-height: 350px;
      display: block;
    }

    /* Top Lists */
    .top-list-card {
      background: white;
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);
      border: 1px solid #f1f5f9;
      overflow: hidden;
    }

    .top-list-header {
      padding: 1rem 1.5rem;
      background: #fafbfc;
      border-bottom: 1px solid #f1f5f9;
    }

    .top-list-title {
      font-size: 1rem;
      font-weight: 600;
      color: #1f2937;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .top-list-body {
      padding: 1rem 1.5rem;
    }

    .list-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0.75rem 0;
      border-bottom: 1px solid #f1f5f9;
      transition: var(--transition);
    }

    .list-item:last-child {
      border-bottom: none;
    }

    .list-item:hover {
      background: #f8fafc;
      margin: 0 -1.5rem;
      padding-left: 1.5rem;
      padding-right: 1.5rem;
    }

    .item-name {
      font-weight: 500;
      color: #374151;
      font-size: 0.875rem;
    }

    .item-value {
      font-weight: 600;
      color: var(--success-color);
      font-size: 0.875rem;
    }

    /* Loading States */
    .loading-spinner {
      display: inline-block;
      width: 1.5rem;
      height: 1.5rem;
      border: 2px solid #f3f4f6;
      border-radius: 50%;
      border-top-color: var(--primary-color);
      animation: spin 1s ease-in-out infinite;
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    .loading-container {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 2rem;
      color: #6b7280;
      gap: 0.75rem;
    }

    .error-container {
      text-align: center;
      padding: 2rem;
      color: var(--danger-color);
      background: #fef2f2;
      border-radius: 0.5rem;
      margin: 1rem 0;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .main-content {
        padding: 1rem;
      }

      .dashboard-header {
        padding: 1.5rem;
        text-align: center;
      }

      .dashboard-title {
        font-size: 2rem;
      }

      .search-container {
        margin: 1rem auto 0;
      }

      .chart-header {
        padding: 1rem;
      }

      .chart-controls {
        justify-content: center;
        margin-top: 1rem;
      }

      .chart-body {
        height: 300px;
      }

      .sales-chart-body {
        height: 350px;
      }

      .chart-canvas {
        height: 250px !important;
      }

      .sales-chart-canvas {
        height: 300px !important;
      }

      .stats-grid {
        grid-template-columns: 1fr;
        gap: 1rem;
      }

      .quick-access-grid {
        grid-template-columns: repeat(2, 1fr);
      }
    }

    @media (max-width: 480px) {
      .quick-access-grid {
        grid-template-columns: 1fr;
      }
    }

    /* Chart specific styles */
    .analytics-main-grid {
      display: grid;
      grid-template-columns: 2fr 1fr;
      gap: 2rem;
      margin-bottom: 2rem;
    }

    .analytics-charts-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 2rem;
      margin-top: 2rem;
    }

    @media (max-width: 1200px) {
      .analytics-main-grid {
        grid-template-columns: 1fr;
      }
    }

    @media (max-width: 768px) {
      .analytics-charts-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <!-- Include Admin Sidebar -->
  <%- include('partials/sidebar', { page: 'dashboard' }) %>

  <div class="main-content">
    <!-- Dashboard Header -->
    <div class="dashboard-header">
      <div class="row align-items-center">
        <div class="col-md-8">
          <h1 class="dashboard-title">Admin Dashboard</h1>
          <p class="dashboard-subtitle">Welcome back! Here's what's happening with your store today.</p>
        </div>
        <div class="col-md-4">
          <div class="search-container">
            <i class="fas fa-search search-icon"></i>
            <input type="text" placeholder="Search anything..." class="search-input" />
          </div>
        </div>
      </div>
    </div>

    <!-- Stats Cards -->
    <div class="stats-grid">
      <div class="stat-card">
        <div class="stat-header">
          <span class="stat-title">Total Users</span>
          <div class="stat-icon" style="background: linear-gradient(135deg, #3b82f6, #1d4ed8);">
            <i class="fas fa-users" style="color: white;"></i>
          </div>
        </div>
        <div class="stat-value" id="totalUsers">
          <div class="loading-container">
            <div class="loading-spinner"></div>
            <span>Loading...</span>
          </div>
        </div>
        <div class="stat-change positive">
          <i class="fas fa-arrow-up"></i> Active customers
        </div>
      </div>

      <div class="stat-card">
        <div class="stat-header">
          <span class="stat-title">Total Orders</span>
          <div class="stat-icon" style="background: linear-gradient(135deg, #10b981, #059669);">
            <i class="fas fa-shopping-cart" style="color: white;"></i>
          </div>
        </div>
        <div class="stat-value" id="totalOrders">
          <div class="loading-container">
            <div class="loading-spinner"></div>
            <span>Loading...</span>
          </div>
        </div>
        <div class="stat-change positive">
          <i class="fas fa-arrow-up"></i> All time orders
        </div>
      </div>

      <div class="stat-card">
        <div class="stat-header">
          <span class="stat-title">Total Sales</span>
          <div class="stat-icon" style="background: linear-gradient(135deg, #f59e0b, #d97706);">
            <i class="fas fa-rupee-sign" style="color: white;"></i>
          </div>
        </div>
        <div class="stat-value" id="totalSales">
          <div class="loading-container">
            <div class="loading-spinner"></div>
            <span>Loading...</span>
          </div>
        </div>
        <div class="stat-change positive">
          <i class="fas fa-arrow-up"></i> Revenue generated
        </div>
      </div>

      <div class="stat-card">
        <div class="stat-header">
          <span class="stat-title">Pending Orders</span>
          <div class="stat-icon" style="background: linear-gradient(135deg, #ef4444, #dc2626);">
            <i class="fas fa-clock" style="color: white;"></i>
          </div>
        </div>
        <div class="stat-value" id="totalPending">
          <div class="loading-container">
            <div class="loading-spinner"></div>
            <span>Loading...</span>
          </div>
        </div>
        <div class="stat-change">
          <i class="fas fa-exclamation-circle"></i> Needs attention
        </div>
      </div>
    </div>

    <!-- Quick Access Section -->
    <div class="mb-4">
      <h3 class="mb-3" style="color: #1f2937; font-weight: 600;">Quick Access</h3>
      <div class="quick-access-grid">
        <a href="/admin/inventory" class="quick-access-card">
          <div class="quick-access-icon" style="background: linear-gradient(135deg, #10b981, #059669);">
            <i class="fas fa-boxes"></i>
          </div>
          <h5 class="quick-access-title">Inventory</h5>
          <p class="quick-access-desc">Manage stock & products</p>
        </a>

        <a href="/admin/inventory/alerts" class="quick-access-card">
          <div class="quick-access-icon" style="background: linear-gradient(135deg, #f59e0b, #d97706);">
            <i class="fas fa-exclamation-triangle"></i>
          </div>
          <h5 class="quick-access-title">Stock Alerts</h5>
          <p class="quick-access-desc">Low & out of stock</p>
        </a>

        <a href="/admin/orders" class="quick-access-card">
          <div class="quick-access-icon" style="background: linear-gradient(135deg, #6366f1, #4f46e5);">
            <i class="fas fa-shopping-cart"></i>
          </div>
          <h5 class="quick-access-title">Orders</h5>
          <p class="quick-access-desc">Manage customer orders</p>
        </a>

        <a href="/admin/return-requests" class="quick-access-card">
          <div class="quick-access-icon" style="background: linear-gradient(135deg, #ef4444, #dc2626);">
            <i class="fas fa-undo"></i>
          </div>
          <h5 class="quick-access-title">Returns</h5>
          <p class="quick-access-desc">Handle return requests</p>
        </a>
      </div>
    </div>

    <!-- Analytics Section -->
    <div class="mb-4">
      <h3 class="mb-3" style="color: #1f2937; font-weight: 600;">Analytics Dashboard</h3>
      
      <div class="analytics-main-grid">
        <!-- Sales Analytics Chart - Fixed Layout -->
        <div class="chart-card">
          <div class="chart-header">
            <div class="d-flex justify-content-between align-items-start flex-wrap">
              <div>
                <h4 class="chart-title">Sales Analytics</h4>
                <p class="chart-subtitle">Track your sales performance over time</p>
              </div>
              <div class="chart-controls">
                <select id="periodSelect" class="chart-select">
                  <option value="daily">Daily View</option>
                  <option value="monthly">Monthly View</option>
                  <option value="yearly">Yearly View</option>
                </select>
                <button id="refreshSales" class="refresh-btn">
                  <i class="fas fa-sync-alt"></i>
                  <span>Refresh</span>
                </button>
              </div>
            </div>
          </div>
          <div class="sales-chart-body">
            <canvas id="salesAnalyticsChart" class="sales-chart-canvas"></canvas>
          </div>
        </div>

        <!-- Top Lists Sidebar -->
        <div class="d-flex flex-column gap-3">
          <!-- Top Products -->
          <div class="top-list-card">
            <div class="top-list-header">
              <h5 class="top-list-title">
                <i class="fas fa-trophy" style="color: #f59e0b;"></i>
                Top 5 Products
              </h5>
            </div>
            <div class="top-list-body" id="topProductsList">
              <div class="loading-container">
                <div class="loading-spinner"></div>
                <span>Loading...</span>
              </div>
            </div>
          </div>

          <!-- Top Categories -->
          <div class="top-list-card">
            <div class="top-list-header">
              <h5 class="top-list-title">
                <i class="fas fa-tags" style="color: #3b82f6;"></i>
                Top 5 Categories
              </h5>
            </div>
            <div class="top-list-body" id="topCategoriesList">
              <div class="loading-container">
                <div class="loading-spinner"></div>
                <span>Loading...</span>
              </div>
            </div>
          </div>

          <!-- Top Brands -->
          <div class="top-list-card">
            <div class="top-list-header">
              <h5 class="top-list-title">
                <i class="fas fa-star" style="color: #8b5cf6;"></i>
                Top 5 Brands
              </h5>
            </div>
            <div class="top-list-body" id="topBrandsList">
              <div class="loading-container">
                <div class="loading-spinner"></div>
                <span>Loading...</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Additional Charts Row -->
      <div class="analytics-charts-grid">
        <!-- Top Products Chart -->
        <div class="chart-card">
          <div class="chart-header">
            <h4 class="chart-title">Top 10 Products</h4>
            <p class="chart-subtitle">Best selling products by quantity</p>
          </div>
          <div class="chart-body">
            <canvas id="topProductsChart" class="chart-canvas"></canvas>
          </div>
        </div>

        <!-- Top Categories Chart -->
        <div class="chart-card">
          <div class="chart-header">
            <h4 class="chart-title">Top 10 Categories</h4>
            <p class="chart-subtitle">Revenue distribution by category</p>
          </div>
          <div class="chart-body">
            <canvas id="topCategoriesChart" class="chart-canvas"></canvas>
          </div>
        </div>

        <!-- Top Brands Chart -->
        <div class="chart-card">
          <div class="chart-header">
            <h4 class="chart-title">Top 10 Brands</h4>
            <p class="chart-subtitle">Brand performance by revenue</p>
          </div>
          <div class="chart-body">
            <canvas id="topBrandsChart" class="chart-canvas"></canvas>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  
  <script>
    // Global variables for charts
    let salesAnalyticsChart;
    let topProductsChart;
    let topCategoriesChart;
    let topBrandsChart;

    // Chart.js default configuration
    Chart.defaults.font.family = "'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif";
    Chart.defaults.font.size = 12;
    Chart.defaults.color = '#6b7280';

    // Initialize dashboard when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
      // Add small delay to ensure Chart.js is loaded
      setTimeout(() => {
        loadDashboardStats();
        loadSalesAnalytics();
        loadTopProducts();
        loadTopCategories();
        loadTopBrands();
      }, 100);
    });

    // Utility function to make authenticated API calls
    async function makeAuthenticatedRequest(url, options = {}) {
      const defaultOptions = {
        method: 'GET',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest',
          ...options.headers
        }
      };

      const response = await fetch(url, { ...defaultOptions, ...options });
      
      if (!response.ok) {
        if (response.status === 401) {
          window.location.href = '/admin/admin-login';
          throw new Error('Authentication required');
        }
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      
      if (!result.success) {
        if (result.redirect) {
          window.location.href = result.redirect;
          throw new Error('Redirecting...');
        }
        throw new Error(result.message || 'Request failed');
      }

      return result;
    }

    // Utility function to show loading state
    function showLoading(elementId) {
      const element = document.getElementById(elementId);
      if (element) {
        element.innerHTML = `
          <div class="loading-container">
            <div class="loading-spinner"></div>
            <span>Loading...</span>
          </div>
        `;
      }
    }

    // Utility function to show error state
    function showError(elementId, message = 'Failed to load data') {
      const element = document.getElementById(elementId);
      if (element) {
        element.innerHTML = `<div class="error-container">${message}</div>`;
      }
    }

    // Load dashboard stats
    async function loadDashboardStats() {
      try {
        const result = await makeAuthenticatedRequest('/admin/api/analytics/dashboard-stats');
        const data = result.data;
        
        document.getElementById('totalUsers').innerHTML = `<strong>${data.totalUsers.toLocaleString()}</strong>`;
        document.getElementById('totalOrders').innerHTML = `<strong>${data.totalOrders.toLocaleString()}</strong>`;
        document.getElementById('totalSales').innerHTML = `<strong>₹${data.totalSales.toLocaleString()}</strong>`;
        document.getElementById('totalPending').innerHTML = `<strong>${data.totalPending.toLocaleString()}</strong>`;
      } catch (error) {
        console.error('Error loading dashboard stats:', error);
        ['totalUsers', 'totalOrders', 'totalSales', 'totalPending'].forEach(id => {
          showError(id, 'Error');
        });
      }
    }

    // Load sales analytics
    async function loadSalesAnalytics() {
      try {
        const period = document.getElementById('periodSelect').value;
        const result = await makeAuthenticatedRequest(`/admin/api/analytics/sales?period=${period}`);
        updateSalesChart(result.data, result.period);
      } catch (error) {
        console.error('Error loading sales analytics:', error);
        // Show error on chart canvas
        const ctx = document.getElementById('salesAnalyticsChart').getContext('2d');
        if (salesAnalyticsChart) {
          salesAnalyticsChart.destroy();
        }
      }
    }

    // Update sales chart with fixed layout
    function updateSalesChart(data, period) {
      const ctx = document.getElementById('salesAnalyticsChart').getContext('2d');
      
      if (salesAnalyticsChart) {
        salesAnalyticsChart.destroy();
      }
      
      salesAnalyticsChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: data.map(item => item.label),
          datasets: [{
            label: 'Sales Revenue (₹)',
            data: data.map(item => item.totalSales),
            borderColor: '#4f46e5',
            backgroundColor: 'rgba(79, 70, 229, 0.1)',
            fill: true,
            tension: 0.4,
            pointBackgroundColor: '#4f46e5',
            pointBorderColor: '#ffffff',
            pointBorderWidth: 2,
            pointRadius: 5,
            pointHoverRadius: 7
          }, {
            label: 'Order Count',
            data: data.map(item => item.orderCount),
            borderColor: '#10b981',
            backgroundColor: 'rgba(16, 185, 129, 0.1)',
            fill: false,
            tension: 0.4,
            pointBackgroundColor: '#10b981',
            pointBorderColor: '#ffffff',
            pointBorderWidth: 2,
            pointRadius: 5,
            pointHoverRadius: 7,
            yAxisID: 'y1'
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          layout: {
            padding: {
              top: 10,
              bottom: 10,
              left: 10,
              right: 10
            }
          },
          interaction: {
            intersect: false,
            mode: 'index'
          },
          plugins: {
            legend: {
              display: true,
              position: 'top',
              labels: {
                usePointStyle: true,
                padding: 20,
                boxWidth: 12
              }
            },
            tooltip: {
              backgroundColor: 'rgba(0, 0, 0, 0.8)',
              titleColor: '#ffffff',
              bodyColor: '#ffffff',
              borderColor: '#4f46e5',
              borderWidth: 1,
              cornerRadius: 8,
              callbacks: {
                label: function(context) {
                  if (context.datasetIndex === 0) {
                    return `Sales: ₹${context.parsed.y.toLocaleString()}`;
                  } else {
                    return `Orders: ${context.parsed.y}`;
                  }
                }
              }
            }
          },
          scales: {
            x: {
              grid: {
                display: false
              },
              ticks: {
                maxTicksLimit: 8,
                font: {
                  size: 11
                }
              }
            },
            y: {
              type: 'linear',
              display: true,
              position: 'left',
              title: {
                display: true,
                text: 'Sales Amount (₹)',
                font: {
                  weight: 'bold',
                  size: 12
                }
              },
              grid: {
                color: 'rgba(0, 0, 0, 0.05)'
              },
              ticks: {
                font: {
                  size: 11
                }
              }
            },
            y1: {
              type: 'linear',
              display: true,
              position: 'right',
              title: {
                display: true,
                text: 'Order Count',
                font: {
                  weight: 'bold',
                  size: 12
                }
              },
              grid: {
                drawOnChartArea: false,
              },
              ticks: {
                font: {
                  size: 11
                }
              }
            }
          }
        }
      });
    }

    // Load top products
    async function loadTopProducts() {
      try {
        const result = await makeAuthenticatedRequest('/admin/api/analytics/top-products');
        updateTopProductsList(result.data.slice(0, 5));
        updateTopProductsChart(result.data.slice(0, 10));
      } catch (error) {
        console.error('Error loading top products:', error);
        showError('topProductsList');
      }
    }

    // Update top products list
    function updateTopProductsList(data) {
      const container = document.getElementById('topProductsList');
      if (data.length === 0) {
        container.innerHTML = '<div class="text-center text-muted py-3">No data available</div>';
        return;
      }
      
      container.innerHTML = data.map((item, index) => `
        <div class="list-item">
          <div class="d-flex align-items-center">
            <span class="badge bg-primary me-2">${index + 1}</span>
            <span class="item-name">${item.productName.substring(0, 25)}${item.productName.length > 25 ? '...' : ''}</span>
          </div>
          <span class="item-value">${item.totalQuantitySold} sold</span>
        </div>
      `).join('');
    }

    // Update top products chart
    function updateTopProductsChart(data) {
      const ctx = document.getElementById('topProductsChart').getContext('2d');
      
      if (topProductsChart) {
        topProductsChart.destroy();
      }
      
      topProductsChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: data.map(item => item.productName.substring(0, 15) + (item.productName.length > 15 ? '...' : '')),
          datasets: [{
            label: 'Quantity Sold',
            data: data.map(item => item.totalQuantitySold),
            backgroundColor: 'rgba(245, 158, 11, 0.8)',
            borderColor: '#f59e0b',
            borderWidth: 1,
            borderRadius: 4
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              display: false
            },
            tooltip: {
              backgroundColor: 'rgba(0, 0, 0, 0.8)',
              cornerRadius: 8
            }
          },
          scales: {
            x: {
              grid: {
                display: false
              }
            },
            y: {
              beginAtZero: true,
              title: {
                display: true,
                text: 'Quantity Sold',
                font: {
                  weight: 'bold'
                }
              },
              grid: {
                color: 'rgba(0, 0, 0, 0.05)'
              }
            }
          }
        }
      });
    }

    // Load top categories
    async function loadTopCategories() {
      try {
        const result = await makeAuthenticatedRequest('/admin/api/analytics/top-categories');
        updateTopCategoriesList(result.data.slice(0, 5));
        updateTopCategoriesChart(result.data.slice(0, 10));
      } catch (error) {
        console.error('Error loading top categories:', error);
        showError('topCategoriesList');
      }
    }

    // Update top categories list
    function updateTopCategoriesList(data) {
      const container = document.getElementById('topCategoriesList');
      if (data.length === 0) {
        container.innerHTML = '<div class="text-center text-muted py-3">No data available</div>';
        return;
      }
      
      container.innerHTML = data.map((item, index) => `
        <div class="list-item">
          <div class="d-flex align-items-center">
            <span class="badge bg-info me-2">${index + 1}</span>
            <span class="item-name">${item.categoryName}</span>
          </div>
          <span class="item-value">₹${item.totalRevenue.toLocaleString()}</span>
        </div>
      `).join('');
    }

    // Update top categories chart
    function updateTopCategoriesChart(data) {
      const ctx = document.getElementById('topCategoriesChart').getContext('2d');
      
      if (topCategoriesChart) {
        topCategoriesChart.destroy();
      }
      
      const colors = [
        '#4f46e5', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6',
        '#06b6d4', '#84cc16', '#f97316', '#ec4899', '#6366f1'
      ];
      
      topCategoriesChart = new Chart(ctx, {
        type: 'doughnut',
        data: {
          labels: data.map(item => item.categoryName),
          datasets: [{
            data: data.map(item => item.totalRevenue),
            backgroundColor: colors,
            borderWidth: 2,
            borderColor: '#ffffff'
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              position: 'bottom',
              labels: {
                usePointStyle: true,
                padding: 15,
                boxWidth: 12
              }
            },
            tooltip: {
              backgroundColor: 'rgba(0, 0, 0, 0.8)',
              cornerRadius: 8,
              callbacks: {
                label: function(context) {
                  return `${context.label}: ₹${context.parsed.toLocaleString()}`;
                }
              }
            }
          }
        }
      });
    }

    // Load top brands
    async function loadTopBrands() {
      try {
        const result = await makeAuthenticatedRequest('/admin/api/analytics/top-brands');
        updateTopBrandsList(result.data.slice(0, 5));
        updateTopBrandsChart(result.data.slice(0, 10));
      } catch (error) {
        console.error('Error loading top brands:', error);
        showError('topBrandsList');
      }
    }

    // Update top brands list
    function updateTopBrandsList(data) {
      const container = document.getElementById('topBrandsList');
      if (data.length === 0) {
        container.innerHTML = '<div class="text-center text-muted py-3">No data available</div>';
        return;
      }
      
      container.innerHTML = data.map((item, index) => `
        <div class="list-item">
          <div class="d-flex align-items-center">
            <span class="badge bg-secondary me-2">${index + 1}</span>
            <span class="item-name">${item.brandName}</span>
          </div>
          <span class="item-value">₹${item.totalRevenue.toLocaleString()}</span>
        </div>
      `).join('');
    }

    // Update top brands chart
    function updateTopBrandsChart(data) {
      const ctx = document.getElementById('topBrandsChart').getContext('2d');
      
      if (topBrandsChart) {
        topBrandsChart.destroy();
      }
      
      topBrandsChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: data.map(item => item.brandName),
          datasets: [{
            label: 'Revenue (₹)',
            data: data.map(item => item.totalRevenue),
            backgroundColor: 'rgba(139, 92, 246, 0.8)',
            borderColor: '#8b5cf6',
            borderWidth: 1,
            borderRadius: 4
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          indexAxis: 'y',
          plugins: {
            legend: {
              display: false
            },
            tooltip: {
              backgroundColor: 'rgba(0, 0, 0, 0.8)',
              cornerRadius: 8,
              callbacks: {
                label: function(context) {
                  return `Revenue: ₹${context.parsed.x.toLocaleString()}`;
                }
              }
            }
          },
          scales: {
            x: {
              beginAtZero: true,
              title: {
                display: true,
                text: 'Revenue (₹)',
                font: {
                  weight: 'bold'
                }
              },
              grid: {
                color: 'rgba(0, 0, 0, 0.05)'
              }
            },
            y: {
              grid: {
                display: false
              }
            }
          }
        }
      });
    }

    // Event listeners
    document.getElementById('periodSelect').addEventListener('change', loadSalesAnalytics);
    
    document.getElementById('refreshSales').addEventListener('click', function() {
      // Add loading state to button
      const btn = this;
      const originalContent = btn.innerHTML;
      btn.innerHTML = '<div class="loading-spinner" style="width: 1rem; height: 1rem;"></div> <span>Loading...</span>';
      btn.disabled = true;
      
      Promise.all([
        loadSalesAnalytics(),
        loadTopProducts(),
        loadTopCategories(),
        loadTopBrands(),
        loadDashboardStats()
      ]).finally(() => {
        btn.innerHTML = originalContent;
        btn.disabled = false;
      });
    });
  </script>
</body>
</html>