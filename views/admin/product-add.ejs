<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Product</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .error-message {
            color: #dc3545;
            font-size: 0.875em;
            margin-top: 0.25rem;
        }
        .image-preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 10px;
        }
        .image-preview {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border: 1px solid #dee2e6;
            border-radius: 4px;
        }
    </style>
</head>
<body class="bg-light">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h2 class="h4 mb-0">Add New Product</h2>
                    </div>
                    <div class="card-body">
                        <% if (typeof error !== 'undefined' && error) { %>
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                <%= error.replace(/\+/g, ' ') %>
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        <% } %>

                        <form method="POST" action="/admin/add-products" enctype="multipart/form-data" id="productForm" novalidate>
                            <div class="mb-4">
                                <label for="productName" class="form-label">Product Name</label>
                                <input type="text" class="form-control" id="productName" name="productName"
                                       placeholder="Enter product name" required>
                                <div id="productName-error" class="error-message"></div>
                            </div>

                            <div class="mb-4">
                                <label for="description" class="form-label">Description</label>
                                <textarea class="form-control" id="description" name="description"
                                          rows="4" placeholder="Enter product description" required></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label for="price" class="form-label">Regular Price</label>
                                    <div class="input-group">
                                        <span class="input-group-text">₹</span>
                                        <input type="number" class="form-control" id="price" name="price"
                                               step="0.01" min="0" placeholder="0.00" required>
                                    </div>
                                    <div id="price-error" class="error-message"></div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label for="salePrice" class="form-label">Sale Price (Optional)</label>
                                    <div class="input-group">
                                        <span class="input-group-text">₹</span>
                                        <input type="number" class="form-control" id="salePrice" name="salePrice"
                                               step="0.01" min="0" placeholder="0.00">
                                    </div>
                                    <div id="salePrice-error" class="error-message"></div>
                                    <small class="text-muted">Leave empty if no sale price</small>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label for="discount" class="form-label">Discount Percentage (Optional)</label>
                                    <div class="input-group">
                                        <input type="number" class="form-control" id="discount" name="discount"
                                               min="0" max="100" placeholder="0">
                                        <span class="input-group-text">%</span>
                                    </div>
                                    <div id="discount-error" class="error-message"></div>
                                    <small class="text-muted">Enter 0-100 for discount percentage</small>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <label for="quantity" class="form-label">Quantity</label>
                                    <input type="number" class="form-control" id="quantity" name="quantity"
                                           min="0" placeholder="0" required>
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>

                            <div class="mb-4">
                                <label for="category" class="form-label">Category</label>
                                <select class="form-select" id="category" name="category" required>
                                    <option value="" selected disabled>Select category</option>
                                    <% if (cat && cat.length > 0) { %>
                                        <% cat.forEach(function(category) { %>
                                            <option value="<%= category.name %>"><%= category.name %></option>
                                        <% }); %>
                                    <% } %>
                                </select>
                                <div id="category-error" class="error-message"></div>
                            </div>

                            <div class="mb-4">
                                <label for="images" class="form-label">Product Images (At least 3 images required)</label>
                                <input class="form-control" type="file" id="images" name="images"
                                       multiple accept="image/jpeg,image/png,image/jpg" required>
                                <small class="form-text text-muted">Select at least 3 images. Only JPG and PNG formats are allowed.</small>
                                <div class="image-preview-container mt-3" id="imagePreview"></div>
                                <div id="images-error" class="error-message"></div>
                            </div>

                            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                <a href="/admin/products" class="btn btn-secondary me-md-2">Cancel</a>
                                <button type="submit" class="btn btn-primary">Add Product</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Image preview and validation
        document.getElementById('images').addEventListener('change', function(e) {
            const previewContainer = document.getElementById('imagePreview');
            previewContainer.innerHTML = '';
            const files = Array.from(this.files);
            const errorElement = document.getElementById('images-error');

            if (files.length < 3) {
                errorElement.textContent = 'Please select at least 3 images';
                return;
            } else {
                errorElement.textContent = '';
            }

            files.forEach(file => {
                if (!file.type.startsWith('image/')) {
                    errorElement.textContent = 'Only image files are allowed';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.classList.add('image-preview');
                    previewContainer.appendChild(img);
                }
                reader.readAsDataURL(file);
            });
        });

        // Form validation
        document.getElementById('productForm').addEventListener('submit', function(e) {
    let isValid = true;

    // Clear previous errors
    const errorElements = document.querySelectorAll('.error-message');
    errorElements.forEach(el => el.textContent = '');

    // Validate product name
    const productName = document.getElementById('productName');
    const productNameVal = productName.value.trim();
    if (!productNameVal) {
        document.getElementById('productName-error').textContent = 'Product name is required';
        isValid = false;
    } else if (!/^[A-Za-z\s]+$/.test(productNameVal)) {
        document.getElementById('productName-error').textContent = 'Product name must contain only letters and spaces';
        isValid = false;
    } else if (productNameVal[0] !== productNameVal[0].toUpperCase()) {
        document.getElementById('productName-error').textContent = 'Product name must start with a capital letter';
        isValid = false;
    }

    // Validate description
    const description = document.getElementById('description');
    const descriptionVal = description.value.trim();
    if (!descriptionVal) {
        document.getElementById('description-error').textContent = 'Description is required';
        isValid = false;
    } else if (!/^[A-Za-z\s]+$/.test(descriptionVal)) {
        document.getElementById('description-error').textContent = 'Description must contain only letters and spaces';
        isValid = false;
    } else if (descriptionVal[0] !== descriptionVal[0].toUpperCase()) {
        document.getElementById('description-error').textContent = 'Description must start with a capital letter';
        isValid = false;
    }

    // Validate price
    const price = document.getElementById('price');
    const priceVal = price.value.trim();
    if (!priceVal || isNaN(priceVal) || parseFloat(priceVal) <= 0) {
        document.getElementById('price-error').textContent = 'Valid price is required';
        isValid = false;
    }

    // Validate sale price
    const salePrice = document.getElementById('salePrice');
    const salePriceVal = salePrice.value.trim();
    if (salePriceVal && (isNaN(salePriceVal) || parseFloat(salePriceVal) < 0)) {
        document.getElementById('salePrice-error').textContent = 'Sale price must be a valid positive number';
        isValid = false;
    } else if (salePriceVal && priceVal && parseFloat(salePriceVal) >= parseFloat(priceVal)) {
        document.getElementById('salePrice-error').textContent = 'Sale price must be less than regular price';
        isValid = false;
    }

    // Validate discount
    const discount = document.getElementById('discount');
    const discountVal = discount.value.trim();
    if (discountVal && (isNaN(discountVal) || parseFloat(discountVal) < 0 || parseFloat(discountVal) > 100)) {
        document.getElementById('discount-error').textContent = 'Discount must be between 0 and 100';
        isValid = false;
    }

    // Validate quantity
    const quantity = document.getElementById('quantity');
    const quantityVal = quantity.value.trim();
    if (!quantityVal || isNaN(quantityVal) || parseInt(quantityVal) < 0 || !Number.isInteger(Number(quantityVal))) {
        document.getElementById('quantity-error').textContent = 'Valid quantity is required (non-negative integer)';
        isValid = false;
    }

    // Validate category
    const category = document.getElementById('category');
    if (!category.value) {
        document.getElementById('category-error').textContent = 'Category is required';
        isValid = false;
    }

    // Validate images
    const images = document.getElementById('images');
    if (images.files.length < 3) {
        document.getElementById('images-error').textContent = 'Please select at least 3 images';
        isValid = false;
    } else {
        // Optional: Validate image file types (jpeg, png, etc.)
        const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg', 'image/gif'];
        for (let i = 0; i < images.files.length; i++) {
            if (!allowedTypes.includes(images.files[i].type)) {
                document.getElementById('images-error').textContent = 'Only JPG, PNG, GIF images are allowed';
                isValid = false;
                break;
            }
        }
    }

    if (!isValid) {
        e.preventDefault();
    }
});
</script>

</body>
</html>