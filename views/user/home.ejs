
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
  <meta http-equiv="Pragma" content="no-cache" />
  <meta http-equiv="Expires" content="0" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Luxe Scents | Premium Perfume Store</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    .hero-section {
      background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://luzescents.shop/assets/HomeCover%20Image%20perfume.jpg');
      background-size: cover;
      background-position: center;
      height: 75vh;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      text-align: center;
      margin-bottom: 30px;
    }
    .hero-content h1 {
      font-size: 3.5rem;
      font-weight: 700;
    }
    .hero-content p {
      font-size: 1.2rem;
      max-width: 700px;
      margin: 0 auto 20px;
    }
    .navbar {
      background-color: #000000;
      padding: 1rem 2rem;
      border-bottom: 1px solid #090909;
    }
    .navbar-brand {
      font-weight: 700;
      font-size: 1.8rem;
      color: #ffffff !important;
      letter-spacing: 1px;
    }
    .navbar-brand:hover {
      color: #bb86fc !important;
    }
    .nav-link {
      color: #e0e0e0 !important;
      font-weight: 500;
      margin: 0 1rem;
      transition: color 0.3s;
    }
    .nav-link:hover {
      color: #bb86fc !important;
    }
    .navbar-icons {
      display: flex;
      align-items: center;
      gap: 1.5rem;
    }
    .navbar-icons a {
      color: #e0e0e0;
      font-size: 1.2rem;
      position: relative;
      transition: color 0.3s;
    }
    .navbar-icons a:hover {
      color: #bb86fc;
    }
    .cart-count {
      position: absolute;
      top: -8px;
      right: -8px;
      background-color: #6200ea;
      color: #ffffff;
      font-size: 0.7rem;
      border-radius: 50%;
      padding: 2px 6px;
    }

    /* Rating Styles */
    .product-rating {
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 0.9rem;
    }

    .stars {
      display: flex;
      gap: 1px;
    }

    .star {
      font-size: 1rem;
      color: #ddd;
    }

    .star.filled {
      color: #ffc107;
    }

    .star.half {
      color: #ffc107;
      opacity: 0.7;
    }

    .star.empty {
      color: #ddd;
    }

    .rating-text {
      color: #666;
      font-size: 0.8rem;
    }
    .dropdown-menu {
      background-color: #2a2a2a;
      border: 1px solid #444;
    }
    .dropdown-item {
      color: #e0e0e0 !important;
      transition: background-color 0.3s, color 0.3s;
    }
    .dropdown-item:hover {
      background-color: #6200ea;
      color: #ffffff !important;
    }
    footer {
      background-color: #000000;
      color: #e0e0e0;
      padding: 3rem 2rem;
      margin-top: 2rem;
      border-top: 1px solid #333;
    }
    footer .container {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      gap: 2rem;
    }
    footer h5 {
      color: #ffffff;
      margin-bottom: 1rem;
      font-size: 1.2rem;
    }
    footer ul {
      list-style: none;
      padding: 0;
    }
    footer ul li {
      margin-bottom: 0.5rem;
    }
    footer ul li a {
      color: #b0b0b0;
      text-decoration: none;
      transition: color 0.3s;
    }
    footer ul li a:hover {
      color: #bb86fc;
    }
    footer .social-icons a {
      color: #e0e0e0;
      font-size: 1.5rem;
      margin-right: 1rem;
      transition: color 0.3s;
    }
    footer .social-icons a:hover {
      color: #bb86fc;
    }
    footer .footer-bottom {
      text-align: center;
      margin-top: 2rem;
      padding-top: 1rem;
      border-top: 1px solid #333;
      color: #b0b0b0;
      font-size: 0.9rem;
    }
    .pagination .page-link {
      color: #6200ea;
      background-color: #ffffff;
      border: 1px solid #6200ea;
      margin: 0 0.2rem;
      transition: background-color 0.3s, color 0.3s;
    }
    .pagination .page-link:hover {
      background-color: #6200ea;
      color: #ffffff;
      border-color: #6200ea;
    }
    .pagination .page-item.active .page-link {
      background-color: #6200ea;
      color: #ffffff;
      border-color: #6200ea;
    }
    .pagination .page-item.disabled .page-link {
      color: #b0b0b0;
      border-color: #b0b0b0;
      background-color: #f9f9f9;
      cursor: not-allowed;
    }
    @media (max-width: 768px) {
      footer .container {
        flex-direction: column;
        text-align: center;
      }
      footer .social-icons {
        justify-content: center;
      }
      .navbar-icons {
        gap: 1rem;
      }
      .pagination {
        justify-content: center;
      }
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container">
      <a class="navbar-brand" href="/">LUXE SCENTS</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav me-auto">
          <li class="nav-item">
            <a class="nav-link active" href="/">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/shop">Shop</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Contact</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">About</a>
          </li>
        </ul>
        <div class="navbar-icons">
          <a href="/wishlist" class="position-relative">
            <i class="fas fa-heart"></i>
            <span class="wishlist-count" id="wishlistCount">0</span>
          </a>
          <a href="/cart" class="position-relative">
            <i class="fas fa-shopping-cart"></i>
            <span class="cart-count" id="cartCount">0</span>
          </a>
          <div class="dropdown">
            <a href="#" class="dropdown-toggle" role="button" data-bs-toggle="dropdown">
              <i class="fas fa-user-circle"></i>
            </a>
            <ul class="dropdown-menu dropdown-menu-end">
              <li><a class="dropdown-item" href="/profile">My Profile</a></li>
              <li><a class="dropdown-item" href="/addresses">My Addresses</a></li>
              <li><hr class="dropdown-divider" style="border-color: #444;"></li>
              <li><a class="dropdown-item" href="#" onclick="confirmLogout(event)">Logout</a></li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </nav>

  <!-- Search Form -->
  <section class="search-section" style="padding: 2rem 0;">
    <div class="container">
      <form id="searchForm" action="/shop" method="GET">
        <div class="input-group">
          <input type="text" id="searchInput" name="search" class="form-control" placeholder="Search products...">
          <select name="category" id="categorySelect" class="form-select">
            <option value="">All Categories</option>
            <% categories.forEach(category => { %>
              <option value="<%= category.name %>"><%= category.name %></option>
            <% }) %>
          </select>
          <button type="submit" id="searchButton" class="btn btn-primary" style="background-color: #6200ea; border-color: #6200ea;" disabled>Search</button>
        </div>
        <div id="searchError" class="text-danger small mt-2" style="display: none;"></div>
      </form>
    </div>
  </section>

  <section class="hero-section">
    <div class="hero-content">
      <h1>Premium Perfumes for Every Occasion</h1>
      <p>Discover our exclusive collection of luxury fragrances</p>
      <a href="/shop" class="btn btn-primary btn-lg">Shop Now</a>
    </div>
  </section>

  <!-- Featured Products Section -->
  <section class="featured-section" style="background-color: #f9f9f9; padding: 4rem 0;">
    <div class="container">
      <div class="section-title" style="text-align: center; margin-bottom: 2rem; position: relative;">
        <h2 style="font-size: 2.5rem; font-weight: 700; margin-bottom: 1rem;">Featured Products</h2>
        <p>Our most popular and exclusive fragrances</p>
        <div style="content: ''; display: block; width: 80px; height: 3px; background-color: #6200ea; margin: 1rem auto;"></div>
      </div>

      <div class="row" id="featuredProductGrid">
        <% if (featuredProducts && featuredProducts.length > 0) { %>
          <% featuredProducts.forEach(product => { %>
            <div class="col-md-3">
              <div class="card product-card" style="border: none; box-shadow: 0 4px 8px rgba(0,0,0,0.1); transition: transform 0.3s, box-shadow 0.3s; margin-bottom: 1.5rem; position: relative;">
                <!-- Wishlist Button -->
                <button class="btn btn-outline-danger wishlist-btn" onclick="addToWishlist('<%= product._id %>')" style="position: absolute; top: 10px; right: 10px; z-index: 10; border-radius: 50%; width: 40px; height: 40px; padding: 0; background: rgba(255,255,255,0.9); border: 1px solid #dc3545;">
                  <i class="fas fa-heart" style="color: #dc3545;"></i>
                </button>

                <a href="/product/<%= product._id %>" class="text-decoration-none">
                  <div class="product-thumb" style="height: 200px; overflow: hidden;">
                    <% if (product.productImage && product.productImage.length > 0) { %>
                      <img src="/uploads/product-images/<%= product.productImage[0] %>" alt="<%= product.productName %>" style="width: 100%; height: 100%; object-fit: cover; transition: transform 0.5s;" />
                    <% } else { %>
                      <img src="/images/default-product.jpg" alt="No image" style="width: 100%; height: 100%; object-fit: cover; transition: transform 0.5s;" />
                    <% } %>
                  </div>
                  <div class="product-info" style="padding: 1.5rem;">
                    <h5 class="product-title" style="font-weight: 600; margin-bottom: 0.5rem; color: #333;"><%= product.productName %></h5>
                    <p class="product-category text-muted" style="font-size: 0.9rem; margin-bottom: 0.5rem;"><%= product.category ? product.category.name : "Uncategorized" %></p>

                     <!-- Rating Display -->
                      <div class="product-rating mb-2">
                        <div class="stars">
                          <%
                            const avgRating = product.averageRating || 0;
                            const fullStars = Math.floor(avgRating);
                            const hasHalfStar = (avgRating % 1) >= 0.5;
                            const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                          %>
                          <% for(let i = 0; i < fullStars; i++) { %>
                            <span class="star filled">★</span>
                          <% } %>
                          <% if(hasHalfStar) { %>
                            <span class="star half">★</span>
                          <% } %>
                          <% for(let i = 0; i < emptyStars; i++) { %>
                            <span class="star empty">☆</span>
                          <% } %>
                        </div>
                        <span class="rating-text">
                          <% if(product.ratingCount > 0) { %>
                            (<%= avgRating.toFixed(1) %>) <%= product.ratingCount %> rating<%= product.ratingCount !== 1 ? 's' : '' %>
                          <% } else { %>
                            No ratings yet
                          <% } %>
                        </span>
                      </div>

                    <div class="price-section">
                      <% if (product.salePrice && product.salePrice < product.price) { %>
                        <div class="d-flex align-items-center flex-wrap">
                          <span class="sale-price text-success fw-bold fs-5">₹<%= product.salePrice.toFixed(2) %></span>
                          <span class="original-price text-muted text-decoration-line-through ms-2" style="font-size: 0.9rem;">₹<%= product.price.toFixed(2) %></span>
                        </div>
                        <% if (product.discount > 0) { %>
                          <div class="mt-1">
                            <span class="discount-badge bg-danger text-white px-2 py-1 rounded" style="font-size: 0.7rem; font-weight: bold;">-<%= product.discount %>% OFF</span>
                          </div>
                        <% } %>
                        <div class="savings-text mt-1">
                          <small class="text-success fw-bold">Save ₹<%= (product.price - product.salePrice).toFixed(2) %></small>
                        </div>
                      <% } else { %>
                        <span class="product-price text-primary fw-bold" style="font-size: 1.2rem;">₹<%= product.price.toFixed(2) %></span>
                      <% } %>
                    </div>
                  </div>
                </a>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div class="col-12 text-center">
            <p>No featured products available at the moment.</p>
          </div>
        <% } %>
      </div>

      <!-- Featured Products Pagination -->
      <nav aria-label="Featured products pagination">
        <ul class="pagination justify-content-center mt-4 fragrances-section" id="featuredPagination">
          <!-- Pagination controls will be dynamically populated -->
        </ul>
      </nav>

      <div class="text-center mt-4">
        <a href="/shop" class="btn btn-primary" style="background-color: #6200ea; border-color: #6200ea; padding: 0.5rem 1.5rem; font-weight: 500; transition: background-color 0.3s;">View All Products</a>
      </div>
    </div>
  </section>

  <!-- Latest Products Section -->
  <section class="latest-section" style="padding: 4rem 0;">
    <div class="container">
      <div class="section-title" style="text-align: center; margin-bottom: 2rem; position: relative;">
        <h2 style="font-size: 2.5rem; font-weight: 700; margin-bottom: 1rem;">Latest Arrivals</h2>
        <p>The newest additions to our collection</p>
        <div style="content: ''; display: block; width: 80px; height: 3px; background-color: #6200ea; margin: 1rem auto;"></div>
      </div>

      <div class="row" id="latestProductGrid">
        <% if (latestProducts && latestProducts.length > 0) { %>
          <% latestProducts.forEach(product => { %>
            <div class="col-md-3">
              <div class="card product-card" style="border: none; box-shadow: 0 4px 8px rgba(0,0,0,0.1); transition: transform 0.3s, box-shadow 0.3s; margin-bottom: 1.5rem; position: relative;">
                <!-- Wishlist Button -->
                <button class="btn btn-outline-danger wishlist-btn" onclick="addToWishlist('<%= product._id %>')" style="position: absolute; top: 10px; right: 10px; z-index: 10; border-radius: 50%; width: 40px; height: 40px; padding: 0; background: rgba(255,255,255,0.9); border: 1px solid #dc3545;">
                  <i class="fas fa-heart" style="color: #dc3545;"></i>
                </button>

                <a href="/product/<%= product._id %>" class="text-decoration-none">
                  <div class="product-thumb" style="height: 200px; overflow: hidden;">
                    <% if (product.productImage && product.productImage.length > 0) { %>
                      <img src="/uploads/product-images/<%= product.productImage[0] %>" alt="<%= product.productName %>" style="width: 100%; height: 100%; object-fit: cover; transition: transform 0.5s;" />
                    <% } else { %>
                      <img src="/images/default-product.jpg" alt="No image" style="width: 100%; height: 100%; object-fit: cover; transition: transform 0.5s;" />
                    <% } %>
                  </div>
                  <div class="product-info" style="padding: 1.5rem;">
                    <h5 class="product-title" style="font-weight: 600; margin-bottom: 0.5rem; color: #333;"><%= product.productName %></h5>
                    <p class="product-category text-muted" style="font-size: 0.9rem; margin-bottom: 0.5rem;"><%= product.category ? product.category.name : "Uncategorized" %></p>
                     <!-- Rating Display -->
                      <div class="product-rating mb-2">
                        <div class="stars">
                          <%
                            const avgRating = product.averageRating || 0;
                            const fullStars = Math.floor(avgRating);
                            const hasHalfStar = (avgRating % 1) >= 0.5;
                            const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                          %>
                          <% for(let i = 0; i < fullStars; i++) { %>
                            <span class="star filled">★</span>
                          <% } %>
                          <% if(hasHalfStar) { %>
                            <span class="star half">★</span>
                          <% } %>
                          <% for(let i = 0; i < emptyStars; i++) { %>
                            <span class="star empty">☆</span>
                          <% } %>
                        </div>
                        <span class="rating-text">
                          <% if(product.ratingCount > 0) { %>
                            (<%= avgRating.toFixed(1) %>) <%= product.ratingCount %> rating<%= product.ratingCount !== 1 ? 's' : '' %>
                          <% } else { %>
                            No ratings yet
                          <% } %>
                        </span>
                      </div>

                    <div class="price-section">
                      <% if (product.salePrice && product.salePrice < product.price) { %>
                        <div class="d-flex align-items-center flex-wrap">
                          <span class="sale-price text-success fw-bold fs-5">₹<%= product.salePrice.toFixed(2) %></span>
                          <span class="original-price text-muted text-decoration-line-through ms-2" style="font-size: 0.9rem;">₹<%= product.price.toFixed(2) %></span>
                        </div>
                        <% if (product.discount > 0) { %>
                          <div class="mt-1">
                            <span class="discount-badge bg-danger text-white px-2 py-1 rounded" style="font-size: 0.7rem; font-weight: bold;">-<%= product.discount %>% OFF</span>
                          </div>
                        <% } %>
                        <div class="savings-text mt-1">
                          <small class="text-success fw-bold">Save ₹<%= (product.price - product.salePrice).toFixed(2) %></small>
                        </div>
                      <% } else { %>
                        <span class="product-price text-primary fw-bold" style="font-size: 1.2rem;">₹<%= product.price.toFixed(2) %></span>
                      <% } %>
                    </div>
                  </div>
                </a>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div class="col-12 text-center">
            <p>No products available at the moment.</p>
          </div>
        <% } %>
      </div>

      <!-- Latest Products Pagination -->
      <nav aria-label="Latest products pagination">
        <ul class="pagination justify-content-center mt-4" id="latestPagination">
          <!-- Pagination controls will be dynamically populated -->
        </ul>
      </nav>

      <div class="text-center mt-4">
        <a href="/shop" class="btn btn-primary" style="background-color: #6200ea; border-color: #6200ea; padding: 0.5rem 1.5rem; font-weight: 500; transition: background-color 0.3s;">Explore All</a>
      </div>
    </div>
  </section>

  <footer>
    <div class="container">
      <div class="footer-section">
        <h5>About Luxe Scents</h5>
        <p style="color: #b0b0b0; max-width: 300px;">
          Discover the finest luxury fragrances crafted for every occasion. Elevate your senses with Luxe Scents.
        </p>
      </div>
      <div class="footer-section">
        <h5>Quick Links</h5>
        <ul>
          <li><a href="/">Home</a></li>
          <li><a href="/shop">Shop</a></li>
          <li><a href="#">Contact Us</a></li>
          <li><a href="#">FAQs</a></li>
        </ul>
      </div>
      <div class="footer-section">
        <h5>Contact Us</h5>
        <ul>
          <li>Email: support@luxescents.com</li>
          <li>Phone: +1 (555) 123-4567</li>
          <li>Address: 123 Fragrance Lane, Scent City</li>
        </ul>
      </div>
      <div class="footer-section">
        <h5>Follow Us</h5>
        <div class="social-icons">
          <a href="#"><i class="fab fa-facebook-f"></i></a>
          <a href="#"><i class="fab fa-instagram"></i></a>
          <a href="#"><i class="fab fa-twitter"></i></a>
          <a href="#"><i class="fab fa-pinterest"></i></a>
        </div>
      </div>
    </div>
    <div class="footer-bottom">
      <p>© 2025 Luxe Scents. All rights reserved.</p>
    </div>
  </footer>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <!-- No Back Button Prevention Script -->
  <script src="/js/no-back-button.js"></script>
  <!-- Global User Status Checker for Google Auth Users -->
  <script src="/js/user-status-checker.js"></script>
  <script>

  async function checkUserStatus() {
    try {
      const res = await fetch('/check-status',{
         headers: {
          'Accept': 'application/json',
          'Cache-Control': 'no-cache'
        },
        credentials: 'include'
      });
      const contentType = res.headers.get("content-type");

    // If response is HTML (like a login page), don't parse as JSON
    if (!contentType || !contentType.includes("application/json")) {
      console.warn("Non-JSON response received, possibly redirected to login.");
      window.location.href = "/logout";
      return;
    }
    
      const data = await res.json();

      if (!data.authenticated || data.blocked) {
        alert("You have been blocked by the admin. You will be logged out.");
        window.location.href = "/logout"; // triggers server logout
      }
    } catch (err) {
      console.error("Error checking user status:", err);
    }
  }

  // Check every 30 seconds to reduce server load
  setInterval(checkUserStatus, 30000);



    


    // Search validation function
    function validateSearchInput(searchValue) {
      // Allow empty search (show all products)
      if (!searchValue) {
        return { isValid: true, message: '' };
      }

      // Check if input contains only spaces (before trimming)
      if (/^\s+$/.test(searchValue)) {
        return { isValid: false, message: 'Search cannot contain only spaces' };
      }

      const trimmedValue = searchValue.trim();

      // After trimming, if empty, it's valid (same as empty search)
      if (trimmedValue === '') {
        return { isValid: true, message: '' };
      }

      // Check if input contains at least one alphabetic character
      if (!/[a-zA-Z]/.test(trimmedValue)) {
        return { isValid: false, message: 'Please enter a valid search keyword with at least one letter' };
      }

      // Check minimum length (at least 2 characters after trimming)
      if (trimmedValue.length < 2) {
        return { isValid: false, message: 'Search keyword must be at least 2 characters long' };
      }

      return { isValid: true, message: '' };
    }

    // Update search button state
    function updateSearchButtonState() {
      const searchInput = document.getElementById('searchInput');
      const searchButton = document.getElementById('searchButton');
      const searchError = document.getElementById('searchError');
      const categorySelect = document.getElementById('categorySelect');

      const searchValue = searchInput.value;
      const categoryValue = categorySelect.value;
      const validation = validateSearchInput(searchValue);

      // Show/hide error message
      if (!validation.isValid) {
        searchError.textContent = validation.message;
        searchError.style.display = 'block';
        searchInput.classList.add('is-invalid');
      } else {
        searchError.style.display = 'none';
        searchInput.classList.remove('is-invalid');
      }

      // Enable button if search is valid OR if category is selected OR if search is empty
      const shouldEnableButton = validation.isValid || categoryValue.trim() !== '' || searchValue.trim() === '';
      searchButton.disabled = !shouldEnableButton;
    }

    // Initialize pagination on page load
    document.addEventListener('DOMContentLoaded', () => {
      // Initialize search validation
      const searchForm = document.getElementById('searchForm');
      const searchInput = document.getElementById('searchInput');
      const categorySelect = document.getElementById('categorySelect');

      if (searchForm && searchInput && categorySelect) {
        // Add real-time validation
        searchInput.addEventListener('input', updateSearchButtonState);
        categorySelect.addEventListener('change', updateSearchButtonState);

        // Initial validation
        updateSearchButtonState();

        // Form submission validation
        searchForm.addEventListener('submit', function(e) {
          const searchValue = searchInput.value;
          const validation = validateSearchInput(searchValue);

          if (!validation.isValid) {
            e.preventDefault();
            Swal.fire({
              icon: 'warning',
              title: 'Invalid Search',
              text: validation.message,
              confirmButtonColor: '#6200ea'
            });
            return false;
          }

          // If valid, allow form submission
          return true;
        });
      }

      // Only initialize pagination controls, don't load content via AJAX on first load
      // The server already renders the first page correctly with sale prices
      initializePaginationControls('featured');
      initializePaginationControls('latest');

      // Update cart and wishlist counts
      updateCounts();
    });

    // Update cart and wishlist counts in header
    function updateCounts() {
      fetch('/api/cart/count')
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            const cartBadge = document.getElementById('cartCount');
            if (cartBadge) {
              cartBadge.textContent = data.cartCount;
            }
          }
        })
        .catch(error => {
          console.error('Error updating cart count:', error);
        });

      fetch('/api/wishlist/count')
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            const wishlistBadge = document.getElementById('wishlistCount');
            if (wishlistBadge) {
              wishlistBadge.textContent = data.wishlistCount;
            }
          }
        })
        .catch(error => {
          console.error('Error updating wishlist count:', error);
        });
    }

    // Initialize pagination controls and add event listeners
    function initializePaginationControls(section) {
      const paginationContainer = document.getElementById(section === 'featured' ? 'featuredPagination' : 'latestPagination');
      if (paginationContainer) {
        // Set up basic pagination for page 1 (server-rendered content)
        paginationContainer.innerHTML = `
          <li class="page-item disabled">
            <a class="page-link" href="#" data-page="0" data-section="${section}" aria-label="Previous">
              <span aria-hidden="true">«</span>
            </a>
          </li>
          <li class="page-item active">
            <a class="page-link" href="#" data-page="1" data-section="${section}">1</a>
          </li>
          <li class="page-item">
            <a class="page-link" href="#" data-page="2" data-section="${section}" aria-label="Next">
              <span aria-hidden="true">»</span>
            </a>
          </li>
        `;

        // Add event listeners to pagination links
        paginationContainer.addEventListener('click', function(e) {
          e.preventDefault();
          const link = e.target.closest('a[data-page]');
          if (link && !link.closest('.page-item').classList.contains('disabled')) {
            const page = parseInt(link.dataset.page);
            const sectionType = link.dataset.section;
            if (page && sectionType) {
              loadProducts(sectionType, page);
            }
          }

          // Handle previous/next button clicks
          const prevNextLink = e.target.closest('a[aria-label="Previous"], a[aria-label="Next"]');
          if (prevNextLink && !prevNextLink.closest('.page-item').classList.contains('disabled')) {
            const page = parseInt(prevNextLink.dataset.page);
            const sectionType = prevNextLink.dataset.section;
            if (page && sectionType) {
              loadProducts(sectionType, page);
            }
          }
        });
      }
    }

    // Load products via AJAX for pagination
    function loadProducts(section, page) {
      const gridContainer = document.getElementById(section === 'featured' ? 'featuredProductGrid' : 'latestProductGrid');
      const paginationContainer = document.getElementById(section === 'featured' ? 'featuredPagination' : 'latestPagination');

      if (!gridContainer) return;

      // Add smooth fade transition
      gridContainer.style.opacity = '0.7';
      gridContainer.style.transition = 'opacity 0.3s ease';

      // Make AJAX request
      fetch(`/?page=${page}&section=${section}`, {
        method: 'GET',
        credentials: 'include',
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          'Accept': 'application/json'
        }
      })
      .then(response => {
        // Check if user was blocked during the request
        if (response.status === 401 || response.status === 403) {
          checkUserStatus(); // Trigger immediate status check
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          // Check if current page has no products and we're not on page 1
          if ((!data.products || data.products.length === 0) && page > 1) {
            // Silently navigate to page 1 if current page is empty (no notifications)
            loadProducts(section, 1);
            return;
          }

          // Update product grid
          updateProductGrid(gridContainer, data.products);

          // Update pagination
          updatePagination(paginationContainer, data.currentPage, data.totalPages, section);

          // Restore opacity for smooth transition
          gridContainer.style.opacity = '1';

          // No scrolling - keep user's current position
        } else {
          gridContainer.innerHTML = '<div class="col-12 text-center"><p class="text-danger">Failed to load products</p></div>';
          gridContainer.style.opacity = '1';
        }
      })
      .catch(error => {
        console.error('Error loading products:', error);
        gridContainer.innerHTML = '<div class="col-12 text-center"><p class="text-danger">Error loading products</p></div>';
        gridContainer.style.opacity = '1';
      });
    }

    // Update product grid with new products
    function updateProductGrid(container, products) {
      if (!products || products.length === 0) {
        container.innerHTML = '<div class="col-12 text-center"><p>No products available</p></div>';
        return;
      }

      const productHTML = products.map(product => `
        <div class="col-md-3">
          <div class="card product-card" style="border: none; box-shadow: 0 4px 8px rgba(0,0,0,0.1); transition: transform 0.3s, box-shadow 0.3s; margin-bottom: 1.5rem; position: relative;">
            <button class="btn btn-outline-danger wishlist-btn" onclick="addToWishlist('${product._id}')" style="position: absolute; top: 10px; right: 10px; z-index: 10; border-radius: 50%; width: 40px; height: 40px; padding: 0; background: rgba(255,255,255,0.9); border: 1px solid #dc3545;">
              <i class="fas fa-heart" style="color: #dc3545;"></i>
            </button>
            <a href="/product/${product._id}" class="text-decoration-none">
              <div class="product-thumb" style="height: 200px; overflow: hidden;">
                ${product.productImage && product.productImage.length > 0
                  ? `<img src="/uploads/product-images/${product.productImage[0]}" alt="${product.productName}" style="width: 100%; height: 100%; object-fit: cover; transition: transform 0.5s;" />`
                  : `<img src="/images/default-product.jpg" alt="No image" style="width: 100%; height: 100%; object-fit: cover; transition: transform 0.5s;" />`
                }
              </div>
              <div class="product-info" style="padding: 1.5rem;">
                <h5 class="product-title" style="font-weight: 600; margin-bottom: 0.5rem; color: #333;">${product.productName}</h5>
                <p class="product-category text-muted" style="font-size: 0.9rem; margin-bottom: 0.5rem;">${product.category ? (product.category.name || product.category) : 'Uncategorized'}</p>

                <!-- Rating Display -->
                <div class="product-rating mb-2">
                  <div class="stars">
                    ${(() => {
                      const avgRating = product.averageRating || 0;
                      const fullStars = Math.floor(avgRating);
                      const hasHalfStar = (avgRating % 1) >= 0.5;
                      const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

                      let starsHTML = '';

                      // Full stars
                      for(let i = 0; i < fullStars; i++) {
                        starsHTML += '<span class="star filled">★</span>';
                      }

                      // Half star
                      if(hasHalfStar) {
                        starsHTML += '<span class="star half">★</span>';
                      }

                      // Empty stars
                      for(let i = 0; i < emptyStars; i++) {
                        starsHTML += '<span class="star empty">☆</span>';
                      }

                      return starsHTML;
                    })()}
                  </div>
                  <span class="rating-text">
                    ${product.ratingCount > 0
                      ? `(${(product.averageRating || 0).toFixed(1)}) ${product.ratingCount} rating${product.ratingCount !== 1 ? 's' : ''}`
                      : 'No ratings yet'
                    }
                  </span>
                </div>

                <div class="price-section">
                  ${product.salePrice && product.salePrice < product.price
                    ? `<div class="d-flex align-items-center flex-wrap">
                         <span class="sale-price text-success fw-bold fs-5">₹${product.salePrice.toFixed(2)}</span>
                         <span class="original-price text-muted text-decoration-line-through ms-2" style="font-size: 0.9rem;">₹${product.price.toFixed(2)}</span>
                       </div>
                       ${product.discount > 0
                         ? `<div class="mt-1"><span class="discount-badge bg-danger text-white px-2 py-1 rounded" style="font-size: 0.7rem; font-weight: bold;">-${product.discount}% OFF</span></div>`
                         : ''
                       }
                       <div class="savings-text mt-1">
                         <small class="text-success fw-bold">Save ₹${(product.price - product.salePrice).toFixed(2)}</small>
                       </div>`
                    : `<span class="product-price text-primary fw-bold" style="font-size: 1.2rem;">₹${product.price.toFixed(2)}</span>`
                  }
                </div>
              </div>
            </a>
          </div>
        </div>
      `).join('');

      container.innerHTML = productHTML;
    }

    // Update pagination controls
    function updatePagination(container, currentPage, totalPages, section) {
      if (!container) {
        return;
      }

      // If no pages or only one page, hide pagination
      if (totalPages <= 1) {
        container.innerHTML = '';
        return;
      }

      let paginationHTML = '';

      // Previous button - always show, disable when on first page
      paginationHTML += `
        <li class="page-item ${currentPage <= 1 ? 'disabled' : ''}">
          <a class="page-link" href="#" data-page="${currentPage - 1}" data-section="${section}" aria-label="Previous" title="Previous Page">
            <span aria-hidden="true">«</span>
          </a>
        </li>
      `;

      // Show page numbers with smart pagination
      const maxVisiblePages = 5;
      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
      let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

      // Adjust start page if we're near the end
      if (endPage - startPage < maxVisiblePages - 1) {
        startPage = Math.max(1, endPage - maxVisiblePages + 1);
      }

      // First page and ellipsis if needed
      if (startPage > 1) {
        paginationHTML += `
          <li class="page-item">
            <a class="page-link" href="#" data-page="1" data-section="${section}">1</a>
          </li>
        `;
        if (startPage > 2) {
          paginationHTML += `
            <li class="page-item disabled">
              <span class="page-link">...</span>
            </li>
          `;
        }
      }

      // Page numbers
      for (let i = startPage; i <= endPage; i++) {
        paginationHTML += `
          <li class="page-item ${i === currentPage ? 'active' : ''}">
            <a class="page-link" href="#" data-page="${i}" data-section="${section}" title="Page ${i}">${i}</a>
          </li>
        `;
      }

      // Last page and ellipsis if needed
      if (endPage < totalPages) {
        if (endPage < totalPages - 1) {
          paginationHTML += `
            <li class="page-item disabled">
              <span class="page-link">...</span>
            </li>
          `;
        }
        paginationHTML += `
          <li class="page-item">
            <a class="page-link" href="#" data-page="${totalPages}" data-section="${section}">${totalPages}</a>
          </li>
        `;
      }

      // Next button - always show, disable when on last page
      paginationHTML += `
        <li class="page-item ${currentPage >= totalPages ? 'disabled' : ''}">
          <a class="page-link" href="#" data-page="${currentPage + 1}" data-section="${section}" aria-label="Next" title="Next Page">
            <span aria-hidden="true">»</span>
          </a>
        </li>
      `;

      container.innerHTML = paginationHTML;
    }

    // Search form now redirects to shop page directly


    // Add to wishlist function
    function addToWishlist(productId) {
      fetch('/wishlist/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          productId: productId
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire({
            icon: 'success',
            title: 'Added to Wishlist!',
            text: data.message,
            confirmButtonColor: '#6200ea',
            timer: 2000,
            timerProgressBar: true
          });

          // Update wishlist count in header
          updateCounts();
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message,
            confirmButtonColor: '#6200ea'
          });
        }
      })
      .catch(error => {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Failed to add item to wishlist',
          confirmButtonColor: '#6200ea'
        });
      });
    }

    function showWishlist() {
      window.location.href = '/wishlist';
    }

    function showCart() {
      window.location.href = '/cart';
    }

    function confirmLogout(event) {
      event.preventDefault();
      Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to log out?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#6200ea',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, log out!'
      }).then((result) => {
        if (result.isConfirmed) {
          window.location.href = '/logout';
        }
      });
    }
  </script>
</body>
</html>
```